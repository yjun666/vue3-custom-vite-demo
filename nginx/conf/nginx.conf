
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

# pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    # access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    # keepalive_timeout  0;
    # keepalive_timeout  65;
    keepalive_timeout  1;

    #gzip  on;

    server {
        listen       8048;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        # location / {
        #     root   html;
        #     index  index.html index.htm;
        # }

        location / {
            root   ../dist/dist;
            # 配置了try_files 的情况下 可以取消下边的 index index.html 的配置
            # index  index.html index.htm;
            # 配合vue-router.history模式
            try_files $uri $uri/ /index.html;
            add_header Access-Control-Allow-Origin *;
            error_page 500 /500.html;
        }

        location ^~/demoProject {
            root   ../dist/;
            # 配置了try_files 的情况下 可以取消下边的 index index.html 的配置
            # index  index.html index.htm;
            # 配合vue-router.history模式
            try_files $uri $uri/ /demoProject/index.html;
            add_header Access-Control-Allow-Origin *;
        }
        # 代理请求， 可进行打包后的请求代理， 相当于开发模式下的vue.config.js中的devServer中的代理，经过测试可以运行， 未测试域名代理访问， /api/ 手动添加的请求前缀， 一般情况下一个服务器需要一个前缀， 前缀和服务器请求地址一一对应
        location /api/ {
            # 跨域 设置为*则所域可以用ajax跨域获取数据 （非必须）
            add_header Access-Control-Allow-Origin *;
            # 跨域响应头 （非必须）
            add_header Access-Control-Allow-Headers X-Requested-With;
            # 允许请求方式 （非必须）
            add_header Access-Control-Allow-Methods GET,POST,OPTIONS;
            # 请求头域名:端口 （非必须）
            proxy_set_header Host $host:$server_port;
            # 设备IP/客户端的IP （非必须）
            proxy_set_header X-Real-IP $remote_addr;
            # HTTP 请求端真实 IP （非必须）
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # 利用这个指令可以为被代理服务器发出的相对重定向增加主机名（修改为on会报错， 启动不起来nginx） （非必须）
            proxy_redirect off;
            # （非必须）
            include mime.types;
            #  （非必须）
            default_type application/octet-stream;
            # 重新写入地址 （必须）
            rewrite ^/b/(.*)$ /$1 break;
            # 需要代理到的ip和端口号 （必须）
            proxy_pass http://172.20.104.138:8076/;
        }

        # error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        # error_page   500 502 503 504  /50x.html;
        # location = /50x.html {
        #     root   ../dist/demoProject;
        # }


        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    # server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    # }


    # HTTPS server
    #
    # server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    # }

}
